{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","currentItemIndex","handleButton","step","props","images","frameSize","lastItemIndex","length","nextItemIndex","setState","this","itemWidth","animationDuration","infinity","className","style","width","transition","map","img","index","transform","src","alt","disabled","type","onClick","React","Component","App","htmlFor","id","value","min","max","onChange","event","target","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e72445f6.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinity: boolean,\n};\n\ntype State = {\n  currentItemIndex: number,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    currentItemIndex: 0,\n  };\n\n  handleButton = (step: number) => () => {\n    const { images, frameSize } = this.props;\n    const { currentItemIndex } = this.state;\n    const lastItemIndex = images.length - frameSize;\n    const firstItemIndex = 0;\n    let nextItemIndex = currentItemIndex + step;\n\n    if (step < 0) {\n      if (currentItemIndex === firstItemIndex) {\n        nextItemIndex = lastItemIndex;\n      } else if (nextItemIndex < firstItemIndex) {\n        nextItemIndex = firstItemIndex;\n      }\n    }\n\n    if (step > 0) {\n      if (currentItemIndex === lastItemIndex) {\n        nextItemIndex = firstItemIndex;\n      } else if (nextItemIndex > lastItemIndex) {\n        nextItemIndex = lastItemIndex;\n      }\n    }\n\n    this.setState(() => ({\n      currentItemIndex: nextItemIndex,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinity,\n    } = this.props;\n\n    const { currentItemIndex } = this.state;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n          transition: `${animationDuration}ms`,\n        }}\n      >\n        <ul className=\"Carousel__list\">\n          {\n            images.map((img, index) => {\n              return (\n                <li\n                  className=\"Carousel__item\"\n                  key={img}\n                  style={{\n                    transform: `translateX(${-currentItemIndex * itemWidth}px)`,\n                    transition: `${animationDuration}ms`,\n                  }}\n                >\n                  <img\n                    width={itemWidth}\n                    src={img}\n                    alt={`emoji-${index + 1}`}\n                  />\n                </li>\n              );\n            })\n          }\n        </ul>\n\n        <div className=\"Carousel__btn\">\n          <button\n            className=\"Carousel__button\"\n            disabled={currentItemIndex <= 0 && !infinity}\n            type=\"button\"\n            onClick={this.handleButton(-step)}\n          >\n            Prev\n          </button>\n\n          <button\n            className=\"Carousel__button\"\n            data-cy=\"next\"\n            disabled={\n              currentItemIndex >= images.length - frameSize && !infinity\n            }\n            type=\"button\"\n            onClick={this.handleButton(step)}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  step: number,\n  frameSize: number,\n  animationDuration: number,\n  infinity: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinity: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      itemWidth,\n      frameSize,\n      animationDuration,\n      infinity,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinity={infinity}\n        />\n\n        <label\n          htmlFor=\"itemId\"\n          className=\"App__label\"\n        >\n          Item Width:\n          <input\n            id=\"itemId\"\n            type=\"number\"\n            value={itemWidth}\n            min={130}\n            max={260}\n            step={10}\n            onChange={(event) => {\n              this.setState({\n                itemWidth: +event.target.value,\n              });\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"frameId\"\n          className=\"App__label\"\n        >\n          Frame Size:\n          <input\n            id=\"frameId\"\n            type=\"number\"\n            value={frameSize}\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={(event) => {\n              this.setState({\n                frameSize: +event.target.value,\n              });\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"stepId\"\n          className=\"App__label\"\n        >\n          Step:\n          <input\n            id=\"stepId\"\n            type=\"number\"\n            value={step}\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={(event) => {\n              this.setState({\n                step: +event.target.value,\n              });\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"animation\"\n          className=\"App__label\"\n        >\n          Animation:\n          <input\n            id=\"animation\"\n            type=\"number\"\n            value={animationDuration}\n            min={500}\n            max={5000}\n            step={500}\n            onChange={(event) => {\n              this.setState({\n                animationDuration: +event.target.value,\n              });\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"infinity\"\n          className=\"App__label\"\n        >\n          Infinity:\n          <input\n            id=\"infinity\"\n            type=\"checkbox\"\n            onChange={(event) => {\n              this.setState({\n                infinity: event.target.checked,\n              });\n            }}\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}